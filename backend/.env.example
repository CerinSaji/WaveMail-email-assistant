# .env.example - Updated for Day 2 Implementation

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
SUPABASE_URL=your_supabase_project_url_here
SUPABASE_KEY=your_supabase_anon_key_here

# Example:
# SUPABASE_URL=https://your-project.supabase.co
# SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# =============================================================================
# GROQ API CONFIGURATION  
# =============================================================================
GROQ_API_KEY=your_groq_api_key_here

# Get your free Groq API key:
# 1. Go to https://console.groq.com/
# 2. Sign up (no credit card required)
# 3. Create API key
# 4. Paste it above
# 
# Free tier: 14,400 requests/day with Llama 3.1

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
ENCRYPTION_KEY=your_32_character_encryption_key_here

# Generate a secure key with Python:
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# 
# Example (DO NOT USE THIS IN PRODUCTION):
# ENCRYPTION_KEY=YourSecure32CharacterEncryptionKey12345

# =============================================================================
# GMAIL API CONFIGURATION (Optional - for Day 3+)
# =============================================================================
# GMAIL_CREDENTIALS_PATH=path/to/gmail/credentials.json
# GMAIL_TOKEN_PATH=path/to/gmail/token.json

# Gmail API setup:
# 1. Go to Google Cloud Console
# 2. Create new project
# 3. Enable Gmail API
# 4. Create OAuth 2.0 credentials
# 5. Download credentials.json

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
ENVIRONMENT=development
DEBUG=true
API_HOST=0.0.0.0
API_PORT=8000

# Production settings (change for production):
# ENVIRONMENT=production
# DEBUG=false